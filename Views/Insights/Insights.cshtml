@{
    ViewData["Title"] = "Attendance Insights";
    var subjects = ViewBag.Subjects as List<AttendanceSystem.Models.Subject>;
    var dates = ViewBag.Dates as List<DateTime>;
}

<style>
    #attendanceStatusChart,
    #totalAttendanceChart,
    #averageAttendanceChart,
    #attendanceTrendChart,
    #studentAttendanceChart,
    #attendanceDistributionChart {
        background-color: #121f3e;
        border-radius: 8px;
    }

    .card {
        background-color: #1e2a4a;
        border: none;
        color: white;
    }

    label.form-label {
        color: white;
    }


    /* Dark style for select dropdowns */
    select.form-select {
        background-color: #121f3e; /* dark blue background */
        color: white; /* white text */
        border: 1px solid #2c3e70; /* optional: subtle border */
    }

        /* When the dropdown is focused (clicked/active) */
        select.form-select:focus {
            background-color: #1e2a4a; /* slightly lighter dark */
            color: white;
            outline: none;
            border-color: #4a90e2; /* highlight border */
        }

        /* Optional: style the options inside the dropdown */
        select.form-select option {
            background-color: #121f3e;
            color: white;
        }
</style>

<h2 class="welcome-message">Attendance Insights</h2>

<div class="card">
    <div class="card-header">
        Filters
    </div>
    <div class="card-body">
        <div class="row g-3">
            <div class="col-md-6">
                <label for="subjectFilter" class="form-label">Select Subject:</label>
                @if (User.IsInRole("Admin"))
                {
                    <select id="subjectFilter" multiple class="form-select">
                        @foreach (var subject in subjects)
                        {
                            <option value="@subject.SubjectID">@subject.SubjectName</option>
                        }
                    </select>
                }
                else
                {
                    <select id="subjectFilter" class="form-select">
                        @foreach (var subject in subjects)
                        {
                            <option value="@subject.SubjectID">@subject.SubjectName</option>
                        }
                    </select>
                }
            </div>
            <div class="col-md-6">
                <label for="dateFilter" class="form-label">Select Date:</label>
                <select id="dateFilter" class="form-select">
                    <option value="">All Dates</option>
                    @foreach (var date in dates)
                    {
                        <option value="@date.ToString("yyyy-MM-dd")">@date.ToString("yyyy-MM-dd")</option>
                    }
                </select>
            </div>
        </div>
    </div>
</div>

<div class="card mt-4">
    <div class="card-header">Attendance Status per Subject</div>
    <div class="card-body">
        <canvas id="attendanceStatusChart" width="200" height="80"></canvas>
    </div>
</div>

<div class="card mt-4">
    <div class="card-header">Total Attendance per Subject</div>
    <div class="card-body">
        <canvas id="totalAttendanceChart" style="max-height: 250px; width: 100%;"></canvas>
    </div>
</div>

@if (User.IsInRole("Admin"))
{
    <div class="card mt-4">
        <div class="card-header">Average Attendance Rate per Subject</div>
        <div class="card-body">
            <canvas id="averageAttendanceChart" width="500" height="300"></canvas>
        </div>
    </div>
}

<div class="card mt-4">
    <div class="card-header">Attendance Trend Over Time</div>
    <div class="card-body">
        <canvas id="attendanceTrendChart" width="800" height="300"></canvas>
    </div>
</div>

<div id="studentAttendanceChartContainer" class="card mt-4" style="display:none;">
    <div class="card-header">Student Attendance Percentage</div>
    <div class="card-body">
        <canvas id="studentAttendanceChart" width="800" height="400"></canvas>
    </div>
</div>

@if (User.IsInRole("Admin"))
{
    <div class="card mt-4">
        <div class="card-header">Attendance Distribution by Day of Week</div>
        <div class="card-body">
            <canvas id="attendanceDistributionChart"></canvas>
        </div>
    </div>
}





@section Scripts {
    <script src="https://cdn.jsdelivr.net/npm/chart.js"></script>
    <script src="https://code.jquery.com/jquery-3.6.0.min.js"></script>

    <script>
        let attendanceStatusChart;
        let totalAttendanceChart;
        let attendanceTrendChart;
        let averageAttendanceChart;
        let studentAttendanceChart;
        let attendanceDistributionChart;

        function destroyChart(chart) {
            if (chart) {
                chart.destroy();
            }
        }

        // Attendance Status Chart
        function loadAttendanceStatusChart(data) {
            destroyChart(attendanceStatusChart);

            const labels = data.map(d => d.subjectName);
            const presentData = data.map(d => d.presentCount);
            const absentData = data.map(d => d.absentCount);

            const ctx = document.getElementById('attendanceStatusChart').getContext('2d');
            attendanceStatusChart = new Chart(ctx, {
                type: 'bar',
                data: {
                    labels: labels,
                    datasets: [
                        {
                            label: 'Present',
                            backgroundColor: 'rgba(75, 192, 192, 0.7)',
                            data: presentData
                        },
                        {
                            label: 'Absent',
                            backgroundColor: 'rgba(255, 99, 132, 0.7)',
                            data: absentData
                        }
                    ]
                },
                options: {
                    responsive: true,
                    scales: {
                        y: { beginAtZero: true }
                    }
                }
            });
        }

        // Total Attendance Chart
        function loadTotalAttendanceChart(data) {
            destroyChart(totalAttendanceChart);

            const labels = data.map(d => d.subjectName);
            const totalData = data.map(d => d.presentCount + d.absentCount);

            const ctx = document.getElementById('totalAttendanceChart').getContext('2d');
            totalAttendanceChart = new Chart(ctx, {
                type: 'bar',
                data: {
                    labels: labels,
                    datasets: [{
                        label: 'Total Attendance',
                        data: totalData,
                        backgroundColor: 'rgba(54, 162, 235, 0.7)'
                    }]
                },
                options: {
                    responsive: true,
                    maintainAspectRatio: true,
                    scales: {
                        y: { beginAtZero: true }
                    }

                }
            });
        }

        // Attendance Trend Chart
        function destroyTrendChart() {
            if (attendanceTrendChart) {
                attendanceTrendChart.destroy();
            }
        }

        function loadAttendanceTrendChart(data) {
            destroyTrendChart();

            const labels = data.map(d => d.date);
            const presentData = data.map(d => d.presentCount);
            const absentData = data.map(d => d.absentCount);

            const ctx = document.getElementById('attendanceTrendChart').getContext('2d');
            attendanceTrendChart = new Chart(ctx, {
                type: 'line',
                data: {
                    labels: labels,
                    datasets: [
                        {
                            label: 'Present',
                            borderColor: 'rgba(75, 192, 192, 1)',
                            backgroundColor: 'rgba(75, 192, 192, 0.2)',
                            data: presentData,
                            fill: true,
                            tension: 0.3
                        },
                        {
                            label: 'Absent',
                            borderColor: 'rgba(255, 99, 132, 1)',
                            backgroundColor: 'rgba(255, 99, 132, 0.2)',
                            data: absentData,
                            fill: true,
                            tension: 0.3
                        }
                    ]
                },
                options: {
                    responsive: true,
                    scales: {
                        y: { beginAtZero: true }
                    }
                }
            });
        }

        // Average Attendance Chart
        function loadAverageAttendanceChart(data) {
            if (averageAttendanceChart) averageAttendanceChart.destroy();

            const labels = data.map(d => d.subjectName);
            const rates = data.map(d => parseFloat(d.attendanceRate.toFixed(2)));

            const ctx = document.getElementById('averageAttendanceChart').getContext('2d');
            averageAttendanceChart = new Chart(ctx, {
                type: 'line',
                data: {
                    labels: labels,
                    datasets: [{
                        label: 'Avg Attendance (%)',
                        data: rates,
                        fill: false,
                        borderColor: 'rgba(75, 192, 192, 1)',
                        backgroundColor: 'rgba(75, 192, 192, 0.2)',
                        tension: 0.3,
                        pointRadius: 5,
                        pointHoverRadius: 7
                    }]
                },
                options: {
                    responsive: true,
                    maintainAspectRatio: true,
                    aspectRatio: 2.5,
                    scales: {
                        y: {
                            beginAtZero: true,
                            max: 100,
                            title: { display: true, text: 'Attendance %' },
                            ticks: { callback: value => value + '%' }
                        },
                        x: {
                            title: { display: true, text: 'Subject' }
                        }
                    },
                    plugins: {
                        tooltip: {
                            callbacks: { label: ctx => ctx.parsed.y.toFixed(2) + '%' }
                        }
                    }
                }
            });
        }

        // Student Attendance Chart
        function loadStudentAttendanceChart(data) {
            if (studentAttendanceChart) studentAttendanceChart.destroy();

            if (!data || data.length === 0) {
                $('#studentAttendanceChartContainer').hide();
                return;
            }

            $('#studentAttendanceChartContainer').show();

            const labels = data.map(d => d.studentName);
            const rates = data.map(d => parseFloat(d.attendanceRate.toFixed(2)));

            const ctx = document.getElementById('studentAttendanceChart').getContext('2d');
            studentAttendanceChart = new Chart(ctx, {
                type: 'line',
                data: {
                    labels: labels,
                    datasets: [{
                        label: 'Student Attendance %',
                        data: rates,
                        fill: false,
                        borderColor: 'rgba(255, 99, 132, 1)',
                        backgroundColor: 'rgba(255, 99, 132, 0.2)',
                        tension: 0.3,
                        pointRadius: 4,
                        pointHoverRadius: 6
                    }]
                },
                options: {
                    responsive: true,
                    maintainAspectRatio: true,
                    aspectRatio: 2.5,
                    scales: {
                        y: {
                            beginAtZero: true,
                            max: 100,
                            title: { display: true, text: 'Attendance %' },
                            ticks: { callback: val => val + '%' }
                        },
                        x: {
                            title: { display: true, text: 'Student' },
                            ticks: {
                                maxRotation: 90,
                                minRotation: 45
                            }
                        }
                    },
                    plugins: {
                        tooltip: {
                            callbacks: {
                                label: ctx => {
                                    const y = ctx.parsed.y;
                                    return (y !== undefined && y !== null) ? y.toFixed(2) + '%' : '0.00%';
                                }
                            }
                        }
                    }
                }
            });
        }

        // Attendance Distribution by Day Chart
        function loadAttendanceDistributionChart(data) {
            if (attendanceDistributionChart) attendanceDistributionChart.destroy();

            const labels = data.map(d => d.day);
            const rates = data.map(d => parseFloat((d.attendanceRate ?? 0).toFixed(2)));

            const ctx = document.getElementById('attendanceDistributionChart').getContext('2d');
            attendanceDistributionChart = new Chart(ctx, {
                type: 'bar',
                data: {
                    labels: labels,
                    datasets: [{
                        label: 'Attendance %',
                        data: rates,
                        backgroundColor: 'rgba(54, 162, 235, 0.7)',
                        borderColor: 'rgba(54, 162, 235, 1)',
                        borderWidth: 1
                    }]
                },
                options: {
                    scales: {
                        y: {
                            beginAtZero: true,
                            max: 100,
                            ticks: { callback: value => value + '%' },
                            title: { display: true, text: 'Attendance %' }
                        },
                        x: {
                            title: { display: true, text: 'Day of Week' }
                        }
                    },
                    responsive: true,
                    plugins: {
                        tooltip: {
                            callbacks: {
                                label: ctx => ctx.parsed.y.toFixed(2) + '%'
                            }
                        }
                    }
                }
            });
        }

        // Fetch and Render charts (status + total) based on filters
        function fetchAndRenderCharts() {
            const subjectIds = $('#subjectFilter').val() || [];
            const date = $('#dateFilter').val();

            $.ajax({
                url: '@Url.Action("GetAttendanceData", "Insights")',
                type: 'GET',
                traditional: true, // important for array param
                data: {
                    subjectIds: subjectIds,
                    date: date || null
                },
                success: function (data) {
                    loadAttendanceStatusChart(data);
                    loadTotalAttendanceChart(data);
                },
                error: function () {
                    alert('Error loading attendance status or total attendance data.');
                }
            });
        }

        // Update trend chart for first selected subject
        function updateTrendChart() {
            const selectedSubjects = $('#subjectFilter').val();

            if (!selectedSubjects || selectedSubjects.length === 0) {
                destroyTrendChart();
                return;
            }

            const subjectId = selectedSubjects[0];

            $.ajax({
                url: '@Url.Action("GetAttendanceTrend", "Insights")',
                data: { subjectId: subjectId },
                success: function (data) {
                    loadAttendanceTrendChart(data);
                },
                error: function () {
                    alert('Error loading attendance trend data.');
                }
            });
        }

        // Initial page setup and event bindings
        $(document).ready(function () {
            $('#subjectFilter').on('change', function () {
                const selectedSubjects = $('#subjectFilter').val();

                if (!selectedSubjects || selectedSubjects.length === 0) {
                    $('#dateFilter').html('<option value="">All Dates</option>');
                    fetchAndRenderCharts();
                    destroyTrendChart();

                    if (studentAttendanceChart) {
                        studentAttendanceChart.destroy();
                    }
                    $('#studentAttendanceChartContainer').hide();
                    return;
                }

                // Load available dates for the selected subjects
                $.ajax({
                    url: '@Url.Action("GetAvailableDates", "Insights")',
                    type: 'GET',
                    data: { subjectIds: selectedSubjects },
                    traditional: true,
                    success: function (dates) {
                        let options = '<option value="">All Dates</option>';
                        dates.forEach(function (date) {
                            options += `<option value="${date}">${date}</option>`;
                        });
                        $('#dateFilter').html(options);

                        fetchAndRenderCharts();
                        updateTrendChart();

                        // Load student attendance for first selected subject
                        $.ajax({
                            url: '@Url.Action("GetStudentAttendancePercentages", "Insights")',
                            type: 'GET',
                            data: { subjectId: selectedSubjects[0] },
                            success: function (data) {
                                if (document.getElementById('studentAttendanceChart')) {
                                    loadStudentAttendanceChart(data);
                                    $('#studentAttendanceChartContainer').show();
                                }
                            },
                            error: function () {
                                alert('Error loading student attendance data.');
                                $('#studentAttendanceChartContainer').hide();
                            }
                        });
                    },
                    error: function () {
                        alert('Failed to load available dates.');
                    }
                });
            });

            $('#dateFilter').on('change', fetchAndRenderCharts);

            // Initial load of average attendance chart (global)
            $.ajax({
                url: '@Url.Action("GetAverageAttendanceRate", "Insights")',
                type: 'GET',
                success: function (data) {
                    if (document.getElementById('averageAttendanceChart')) {
                        loadAverageAttendanceChart(data);
                    }
                },
                error: function () {
                    alert('Error loading average attendance rate data.');
                }
            });

            // Load attendance distribution by day (no filters)
            $.ajax({
                url: '@Url.Action("GetAttendanceDistributionByDay", "Insights")',
                type: 'GET',
                success: function (data) {
                    if (document.getElementById('attendanceDistributionChart')) {
                        loadAttendanceDistributionChart(data);
                    }
                },
                error: function () {
                    alert('Error loading attendance distribution data.');
                }
            });

            // Initial load of filtered charts on page load
            fetchAndRenderCharts();
            updateTrendChart();
        });

    </script>
}



